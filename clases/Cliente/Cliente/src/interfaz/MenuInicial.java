/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import Dominio.Jugador;
import java.awt.Color;
import java.awt.Dimension;
import javax.swing.JOptionPane;

/**
 *
 * @author Abraham Quintana y Rafael Soqui
 */
public class MenuInicial extends javax.swing.JFrame {

   /**
     * Instancia de jugador registrado.
     */
    private Jugador jugador;

    /**
     * Instancia de si mismo.
     */
    private static MenuInicial instance;

    /**
     * Creates new form FrmMenu
     */
    public MenuInicial(Jugador jugador) {
        initComponents();
        this.setResizable(false);
        this.setSize(new Dimension(540, 400));
        this.setPreferredSize(new Dimension(540, 400));
        this.setLocationRelativeTo(null);
        this.setTitle("Timbiriche.");
        this.getContentPane().setBackground(Color.BLACK);

        if (jugador == null) {
            DlgRegistrarJugador pnlreg = new DlgRegistrarJugador(this, true);
            pnlreg.setVisible(true);
        } else {
            this.jugador = jugador;
        }
    }
    
    /**
     * Metodo estatico que regresa la instancia de MenuInicial. Si la instancia
     * es nula, la inicializa.
     *
     * @param jugador
     * @return
     */
    public static MenuInicial getInstance(Jugador jugador) {
        if (instance == null) {
            instance = new MenuInicial(jugador);
        }
        instance.setJugador(jugador);
        return instance;
    }
    
    /**
     * Retorna el jugador ingresado.
     *
     * @return
     */
    public Jugador getJugador() {
        return jugador;
    }
    
    /**
     * Establece el jugador ingresado. Su avatar y su nombre.
     *
     * @param jugador
     */
    public void setJugador(Jugador jugador) {
        this.jugador = jugador;
//        this.avatarIcon.setIcon(new ImageIcon("src\\Avatares\\" + jugador.getRutaAvatar()));
//        this.nombreJugador.setText(jugador.getNombre());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnCrear = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 153));
        jLabel1.setText("Menu Principal");

        btnCrear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCrear.setForeground(new java.awt.Color(204, 0, 51));
        btnCrear.setText("Jugar");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnRegresar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(204, 0, 51));
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRegresar)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(btnCrear)))))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(61, 61, 61)
                .addComponent(btnCrear)
                .addGap(54, 54, 54)
                .addComponent(btnRegresar)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "¿Seguro que quiere cerrar el juego?", "Confirmacion", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        String ip = null, port = null;

        ip = JOptionPane.showInputDialog(this, "Dirección IP", "¿A donde te quieres conectar?", JOptionPane.OK_CANCEL_OPTION);
        port = JOptionPane.showInputDialog(this, "Puerto", "¿A donde quieres llegar?", JOptionPane.OK_CANCEL_OPTION);

//        DlgTipoSala opciones = new DlgTipoSala(this, true);
//        opciones.setVisible(true);
//
//        String tipoSeleccionado = opciones.getTipoSeleccionado();
//
//        if (tipoSeleccionado != null) {
//            if (tipoSeleccionado.equals("Publica")) {
                SalaEsperaPublica se = SalaEsperaPublica.crear();
                if (se.ejecutarConexion(jugador, ip, Integer.valueOf(port))) {
                    se.setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo realizar la conexión con el servidor", "Fallo de Conexión", JOptionPane.ERROR_MESSAGE);
                    se = null;
                }
//            } else {
//                SalaEsperaPrivada se = SalaEsperaPrivada.crear();
//                if (se.ejecutarConexion(jugador, ip, Integer.valueOf(port))) {
//                    se.setVisible(true);
//                    this.dispose();
//                } else {
//                    JOptionPane.showMessageDialog(this, "No se pudo realizar la conexión con el servidor", "Fallo de Conexión", JOptionPane.ERROR_MESSAGE);
//                    se = null;
//                }
//            }
//        } else {
//            System.out.println("Cerró el diálogo sin seleccionar nada.");
//        }
    }//GEN-LAST:event_btnCrearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
